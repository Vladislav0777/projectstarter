version: '3.8'
services:
  service-db:
    image: postgres:16.2-alpine
    environment:
      POSTGRES_USER: vztv
      POSTGRES_PASSWORD: vztv
      PGPORT: "5431"
    ports:
      - "5431:5431"
    volumes:
      - ./infrastructure/db/create_db.sql:/docker-entrypoint-initdb.d/create_db.sql
    restart: unless-stopped
  crowd:
    image: atlassian/crowd:latest
    container_name: crowd.jks
    ports:
      - "8095:8095"
    environment:
      - CROWD_HOME=/var/atlassian/application-data/crowd.jks
    volumes:
      - ./crowd_home:/var/atlassian/application-data/crowd.jks
#version: '3.2'
#services:
#  keycloak:
#    image: quay.io/keycloak/keycloak:20.0.0
#    command: start-dev
#    environment:
#      KC_DB: postgres
#      KC_DB_URL_HOST: postgres
#      KC_DB_URL_DATABASE: keycloak_v1
#      KC_DB_PASSWORD: root
#      KC_DB_USERNAME: postgres
#      KC_DB_SCHEMA: public
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#      KEYCLOAK_JDBC_PARAMS: 'sslmode=require'
#    ports:
#      - "9090:8080"
#    depends_on:
#      postgres:
#        condition: service_healthy
#    networks:
#      network_sso:
#
#  postgres:
#    image: postgres:10
#    command: ["postgres", "-c", "max_connections=200", "-c", "shared_buffers=24MB", "-c", "listen_addresses=*"]
#    environment:
#      POSTGRES_DB: keycloak_v1
#      POSTGRES_USER: postgres
#      POSTGRES_PASSWORD: root
#    healthcheck:
#      test: "exit 0"
#    ports:
#      - "5436:5432"
#    networks:
#      network_sso:
#    volumes:
#      - postgres_data:/var/lib/postgresql/data
#    user: postgres
#
#  redis:
#    image: redis:latest
#    ports:
#      - "6379:6379"
#    environment:
#      REDIS_PASSWORD: "root"
#    volumes:
#      - redis_data:/data
#
#volumes:
#  postgres_data:
#  redis_data:
#
#networks:
#  network_sso: